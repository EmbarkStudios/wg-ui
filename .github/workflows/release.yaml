name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  release-docker:
    name: Docker
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set environment variable for version tag
        run: echo "WG-UI-VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: embarkstudios/wireguard-ui:${{ env.WG-UI-VERSION }}

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json

  release-binary:
    name: Binary
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-verison: 12

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build UI
      run: |
        make ui

    - name: Build wg-ui for Linux (AMD64)
      run: |
        name=wg-ui
        target=linux-amd64
        release_name="$name-${GITHUB_REF#refs/tags/v}-$target"
        release_tar="$release_name.tar.gz"
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o "$release_name"
        tar czvf "$release_tar" "$release_name"
        echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
        rm "$release_name"

    - name: Build wg-ui for Linux (ARMv5)
      run: |
        name=wg-ui
        target=linux-armv5
        release_name="$name-${GITHUB_REF#refs/tags/v}-$target"
        release_tar="$release_name.tar.gz"
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=5 go build -o "$release_name"
        tar czvf "$release_tar" "$release_name"
        echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
        rm "$release_name"

    - name: Build wg-ui for Linux (ARMv6)
      run: |
        name=wg-ui
        target=linux-armv6
        release_name="$name-${GITHUB_REF#refs/tags/v}-$target"
        release_tar="$release_name.tar.gz"
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -o "$release_name"
        tar czvf "$release_tar" "$release_name"
        echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
        rm "$release_name"

    - name: Build wg-ui for Linux (ARMv7)
      run: |
        name=wg-ui
        target=linux-armv7
        release_name="$name-${GITHUB_REF#refs/tags/v}-$target"
        release_tar="$release_name.tar.gz"
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -o "$release_name"
        tar czvf "$release_tar" "$release_name"
        echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
        rm "$release_name"

    - name: Build wg-ui for Linux (ARM64)
      run: |
        name=wg-ui
        target=linux-arm64
        release_name="$name-${GITHUB_REF#refs/tags/v}-$target"
        release_tar="$release_name.tar.gz"
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o "$release_name"
        tar czvf "$release_tar" "$release_name"
        echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
        rm "$release_name"

    - name: List content
      run: |
        ls -lah wg-ui*

    - name: GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: true
        files: "wg-ui-*"
